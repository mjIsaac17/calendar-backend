{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/error-messages.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchNoToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","types","baseEndpoint","startLogin","email","password","dispatch","a","resp","json","ok","setItem","Date","getTime","login","uid","name","msg","startRegister","checkingFinish","type","user","payload","useForm","initialState","useState","values","setValues","handleInputChange","target","value","reset","LoginScreen","useDispatch","errorMessageLogin","setErrorMessageLogin","errorMessageRegister","setErrorMessageRegister","lEmail","lPassword","formLoginValues","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","handleLogin","e","preventDefault","errorMessage","handleRegister","className","onSubmit","placeholder","onChange","errorMessages","uiOpenModal","prepareEvents","events","map","event","start","moment","toDate","end","eventAddNew","eventClearActive","eventUpdate","eventDelete","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","title","notes","CalendarModal","modalOpen","useSelector","state","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","formErrorMessage","setFormErrorMessage","formValues","setFormValues","useEffect","closeModal","isFormValid","momentStart","momentEnd","isSameOrAfter","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","id","alert","console","log","getState","auth","_id","eventStartAddNew","date","maxDate","minDate","autoComplete","rows","CalendarEvent","Navbar","onClick","clear","to","messages","allDay","previous","next","today","month","week","day","agenda","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadious","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onSelectSlot","selectable","onView","selectedView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","PublicRoute","AppRouter","checking","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27b1bbc6.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n//Function when we need to call an endpoint without authentication (Login/Register)\r\nconst fetchNoToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/login\r\n  if (method === \"GET\") return fetch(url);\r\n  else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\n//Function when we need to call an endpoint with authentication\r\nconst fetchToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/login\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  if (method === \"GET\") {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { \"x-token\": token },\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\", \"x-token\": token },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\n//Another way to export, we could have used: export const fetchToken ...\r\nexport { fetchNoToken, fetchToken };\r\n","export const types = {\r\n  uiOpenModal: \"[UI] Open Modal\",\r\n  uiCloseModal: \"[UI] Close Modal\",\r\n\r\n  eventSetActive: \"[event] Set active\",\r\n  eventLogout: \"[event] Logout\",\r\n  eventStartAddNew: \"[event] Start add new\",\r\n  eventAddNew: \"[event] Add new\",\r\n  eventClearActive: \"[event] Clear active\",\r\n  eventUpdate: \"[event] Event update\",\r\n  eventDelete: \"[event] Event delete\",\r\n  eventLoaded: \"[event] Events loaded\",\r\n\r\n  authCheckingFinish: \"[auth] Finish checking login state\",\r\n  authStartLogin: \"[auth] Start login\",\r\n  authLogin: \"[auth] Login\",\r\n  authStartRegister: \"[auth] Start register\",\r\n  authStartTokenRenew: \"[auth] Start token renew\",\r\n  authLogout: \"[auth] Logout\",\r\n};\r\n","import { fetchNoToken, fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nconst baseEndpoint = \"auth\";\r\n\r\nexport const startLogin = (email, password) => {\r\n  //the return is triggered by thunk when we need to use async functions\r\n  return async (dispatch) => {\r\n    const resp = await fetchNoToken(baseEndpoint, { email, password }, \"POST\");\r\n    const body = await resp.json();\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n      return \"\";\r\n    }\r\n    // else{\r\n    //     //Using sweet alert\r\n    //     //Swal.fire\r\n    // }\r\n    return body.msg;\r\n  };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchNoToken(\r\n      `${baseEndpoint}/new`,\r\n      { email, password, name },\r\n      \"POST\"\r\n    );\r\n    const body = await resp.json();\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n      return \"\";\r\n    }\r\n    return body.msg;\r\n  };\r\n};\r\n\r\n//Renew token\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchToken(`${baseEndpoint}/renew`);\r\n    const body = await resp.json();\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else dispatch(checkingFinish());\r\n  };\r\n};\r\n\r\nexport const checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\n\r\nexport const logout = () => {\r\n  localStorage.clear();\r\n  return { type: types.authLogout };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [errorMessageLogin, setErrorMessageLogin] = useState(\"\");\r\n  const [errorMessageRegister, setErrorMessageRegister] = useState(\"\");\r\n\r\n  const [formLoginValues, handleInputChange] = useForm({\r\n    lEmail: \"isaac@gmail.com\", //loginEmail\r\n    lPassword: \"123456\",\r\n  });\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"Caasi\",\r\n    rEmail: \"caasi@gmail.com\", //registerEmail\r\n    rPassword1: \"123456\",\r\n    rPassword2: \"123456\",\r\n  });\r\n\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const errorMessage = await dispatch(startLogin(lEmail, lPassword));\r\n    setErrorMessageLogin(errorMessage);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (rPassword1 !== rPassword2) {\r\n      return setErrorMessageRegister(\"Passwords must be the same\");\r\n    }\r\n    //More validations if required\r\n    const errorMessage = await dispatch(\r\n      startRegister(rEmail, rPassword1, rName)\r\n    );\r\n    setErrorMessageRegister(errorMessage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Login</h3>\r\n          <form onSubmit={handleLogin}>\r\n            {errorMessageLogin !== \"\" && (\r\n              <div className=\"alert alert-danger\">\r\n                <p className=\"noMargin text-center\">{errorMessageLogin}</p>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"lEmail\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                value={lEmail}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Register</h3>\r\n          <form onSubmit={handleRegister}>\r\n            {errorMessageRegister !== \"\" && (\r\n              <div className=\"alert alert-danger\">\r\n                <p className=\"noMargin text-center\">{errorMessageRegister}</p>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"rPassword2 \"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const errorMessages = {\r\n  emptyTitle: \"Invalid Title\",\r\n  invalidDates: \"Start date or end date is not valid\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal,\r\n});\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map((event) => ({\r\n    ...event,\r\n    start: moment(event.start).toDate(),\r\n    end: moment(event.end).toDate(),\r\n  }));\r\n};\r\n","import { fetchToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { uid, name } = getState().auth;\r\n      const resp = await fetchToken(\"events\", event, \"POST\");\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        event.id = body.event.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name,\r\n        };\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event,\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n  type: types.eventClearActive,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(`events/${event.id}`, event, \"PUT\");\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        dispatch(eventUpdate(event));\r\n      } else {\r\n        alert(`Error. ${body.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventUpdate = (event) => ({\r\n  type: types.eventUpdate,\r\n  payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { id } = getState().calendar.activeEvent;\r\n      const resp = await fetchToken(`events/${id}`, {}, \"DELETE\");\r\n      const body = await resp.json();\r\n      if (resp.ok) {\r\n        dispatch(eventDelete());\r\n      } else {\r\n        alert(`Error. ${body.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDelete = () => ({\r\n  type: types.eventDelete,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchToken(\"events\");\r\n      const body = await resp.json();\r\n      const events = prepareEvents(body.events);\r\n      dispatch(eventLoaded(events));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n  type: types.eventLogout,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { errorMessages } from \"../../helpers/error-messages\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\nimport \"../../styles/modal.css\";\r\nimport {\r\n  eventClearActive,\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n} from \"../../actions/events\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n//Bind modal to your appElement\r\nModal.setAppElement(\"#root\"); //id root in index.html\r\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst nowPlusOne = now.clone().add(1, \"hours\");\r\n\r\nconst initEvent = {\r\n  title: \"\",\r\n  notes: \"\",\r\n  start: now.toDate(),\r\n  end: nowPlusOne.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent } = useSelector((state) => state.calendar);\r\n\r\n  const [startDate, setStartDate] = useState(now.toDate());\r\n  const [endDate, setEndDate] = useState(nowPlusOne.toDate());\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n  const { title, notes, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActive());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  // Handlers\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleStartDateChange = (date) => {\r\n    setStartDate(date);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: date,\r\n    });\r\n  };\r\n  const handleEndDateChange = (date) => {\r\n    setEndDate(date);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: date,\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      if (activeEvent) {\r\n        dispatch(eventStartUpdate(formValues));\r\n      } else {\r\n        dispatch(eventStartAddNew(formValues));\r\n      }\r\n      dispatch(closeModal);\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n    if (title === \"\") {\r\n      setFormErrorMessage(errorMessages.emptyTitle);\r\n      return false;\r\n    }\r\n    if (momentStart.isSameOrAfter(momentEnd, \"minutes\")) {\r\n      setFormErrorMessage(errorMessages.invalidDates);\r\n      return false;\r\n    }\r\n    setFormErrorMessage(\"\");\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      //   onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n      closeTimeoutMS={200}\r\n    >\r\n      <h1>{activeEvent ? \"Update event\" : \"New event\"}</h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        {formErrorMessage && (\r\n          <div className=\"alert alert-danger\">\r\n            <p className=\"text-center modal-noMargin\">{formErrorMessage}</p>\r\n          </div>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label>Start date and time</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={start}\r\n            className={`form-control ${\r\n              formErrorMessage === errorMessages.invalidDates && \"is-invalid\"\r\n            }`}\r\n            maxDate={endDate}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>End date and time</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={end}\r\n            className=\"form-control\"\r\n            minDate={startDate}\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Title and notes</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${\r\n              formErrorMessage === errorMessages.emptyTitle && \"is-invalid\"\r\n            }`}\r\n            placeholder=\"Event title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            A short description\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notes\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Additional information\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span>Save</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  //   console.log(event);\r\n  const { title, user } = event;\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <br />\r\n      <span>- {user.name}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport { eventLogout } from \"../../actions/events\";\r\n\r\nexport const Navbar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    dispatch(eventLogout());\r\n    return <Redirect to=\"/login\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n        <i className=\"fa fa-sign-out-alt mr-1\"></i>\r\n        <span>Exit</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n  allDay: \"Todo el día\",\r\n  previous: \"<\",\r\n  next: \">\",\r\n  today: \"Hoy\",\r\n  month: \"Mes\",\r\n  week: \"Semana\",\r\n  day: \"Día\",\r\n  agenda: \"Agenda\",\r\n  date: \"Fecha\",\r\n  time: \"Hora\",\r\n  event: \"Evento\",\r\n  noEventsInRange: \"No hay eventos en este rango\",\r\n  showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleClick}>\r\n      <i className=\"fa fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventStartDelete } from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete());\r\n  };\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fa fa-trash mr-1\"></i>\r\n      <span>Delete event</span>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\n\r\nimport \"moment/locale/es\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nimport { CalendarModal } from \"./CalendarModal\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\n\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport {\r\n  eventClearActive,\r\n  eventSetActive,\r\n  eventStartLoading,\r\n} from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\nimport { useEffect } from \"react\";\r\n\r\n// moment.locale(\"es\");\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem(\"lastView\") || \"month\"\r\n  );\r\n\r\n  const { events, activeEvent } = useSelector((state) => state.calendar);\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading());\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n  const onSelectEvent = (event) => {\r\n    dispatch(eventSetActive(event));\r\n  };\r\n\r\n  //Function triggered when we change the view (month, week, day)\r\n  const onViewChange = (selectedView) => {\r\n    // console.log(selectedView);\r\n    setLastView(selectedView);\r\n    localStorage.setItem(\"lastView\", selectedView);\r\n  };\r\n\r\n  const onSelectSlot = (e) => {\r\n    // console.log(e);\r\n    // e contains the slot where the user clicked,\r\n    // this is usefull if we want to add an event where it was selected\r\n    dispatch(eventClearActive());\r\n  };\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: uid === event.user._id ? \"#367CF7\" : \"#465555\",\r\n      borderRadious: \"0px\",\r\n      opacity: 0.8,\r\n      display: \"block\",\r\n      color: \"white\",\r\n    };\r\n    return { style };\r\n  };\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages} //change messages to Spanish\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n      />\r\n      <AddNewFab />\r\n      {activeEvent && <DeleteEventFab />}\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        //if the user is not authenticated will be redirected to the login, this is defined in AppRouter.js\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { checkingFinish, startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  //Renew the token when the page loads\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!!token) {\r\n      dispatch(startChecking());\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h5>Loading ...</h5>;\r\n  } else {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              isAuthenticated={!!uid}\r\n              component={LoginScreen}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/\"\r\n              isAuthenticated={!!uid}\r\n              component={CalendarScreen}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  //   uid: null,\r\n  //   name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authLogout:\r\n      return { checking: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n// Event\r\n// {\r\n//   id: 123a456b789c,\r\n//   title: \"React course\",\r\n//   start: moment().toDate(), // = new Date()\r\n//   end: moment().add(2, \"hours\").toDate(),\r\n//   notes: \"Learn Node\",\r\n//   user: {\r\n//     _id: \"1234\",\r\n//     name: \"Alejandra\",\r\n//   },\r\n// },\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n\r\n    case types.eventClearActive:\r\n      return { ...state, activeEvent: null };\r\n\r\n    case types.eventUpdate:\r\n      //action.payload = eventToUpdate\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event.id === action.payload.id ? action.payload : event\r\n        ),\r\n      };\r\n\r\n    case types.eventDelete:\r\n      //action.payload = eventToUpdate\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          (event) => event.id !== state.activeEvent.id\r\n        ),\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      };\r\n\r\n    case types.eventLogout:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true,\r\n      };\r\n\r\n    case types.uiCloseModal:\r\n      return {\r\n        modalOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <AppRouter />\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles/styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}